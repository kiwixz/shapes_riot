on: [create, pull_request, push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: ["Debug", "Release"]
        cxx: ["g++", "clang++"]
    container:
      image: kiwixz/ci-cpp:2019-10-20
    steps:
      - name: Install system dependencies
        run: |
          pacman --color=always --needed --noconfirm -Sy  \
              git openssh  \
              clang cmake nasm ninja python  \
              libxcursor libxi libxinerama libxrandr  `# glfw`

      - name: Dump packages versions
        run: |
          pacman --color=always -Q

      - name: Checkout
        run: |
          git clone "https://github.com/$GITHUB_REPOSITORY" "./"
          git checkout "$GITHUB_SHA"

      - name: Configure
        env:
          BUILD_TYPE: ${{ matrix.build_type }}
          CXX: ${{ matrix.cxx }}
        run: |
          ln -s "/opt/vcpkg"
          cmake -G Ninja -D "CMAKE_BUILD_TYPE=$BUILD_TYPE" -D "CMAKE_CXX_COMPILER=$CXX" -S "." -B "build"

      - name: Dump libraries versions
        run: |
          vcpkg list

      - name: Build
        run: |
          ninja -C "build"

      - name: Test
        env:
          ASAN_OPTIONS: check_initialization_order=1:detect_stack_use_after_return=1
          UBSAN_OPTIONS: print_stacktrace=1
        run: |
          ctest --output-on-failure -C "build"


  build_windows:
    runs-on: windows-latest
    steps:
      - name: Install system dependencies
        run: |
          choco install nasm

      - name: Checkout
        run: |
          git clone "https://github.com/%GITHUB_REPOSITORY%" "."
          git checkout "%GITHUB_SHA%"

      - name: Install vcpkg dependencies
        run: |
          mkdir "build\vcpkg"
          cd "build\vcpkg"
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cmake -G Ninja "..\.."

      - name: Test debug
        run: |
          mkdir "build\debug"
          cd "build\debug"
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cmake -G Ninja -D "CMAKE_BUILD_TYPE=Debug" "..\.."
          ninja
          ctest --output-on-failure -E "check_.*"

      - name: Test release
        run: |
          mkdir "build\release"
          cd "build\release"
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cmake -G Ninja -D "CMAKE_BUILD_TYPE=Release" "..\.."
          ninja
          ctest --output-on-failure -E "check_.*"
