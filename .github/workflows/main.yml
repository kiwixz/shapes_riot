on: [create, pull_request, push]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: kiwixz/ci-cpp:2019-08-18
    steps:
      - name: Install system dependencies
        run: |
          pacman --color=always --needed --noconfirm -Sy  \
              clang cmake nasm ninja python  \
              libxcursor libxi libxinerama libxrandr  `# glfw`

      - name: Checkout
        run: |
          git clone "https://github.com/$GITHUB_REPOSITORY" "./"
          git checkout "$GITHUB_SHA"

      - name: Install vcpkg dependencies
        run: |
          ln -s "/opt/vcpkg"
          mkdir -p "build/vcpkg"
          cd "build/vcpkg"
          cmake "../.."

      - name: Dump versions
        run: |
          pacman --color=always -Q
          vcpkg list

      - name: Test debug
        env:
          CXXFLAGS: -fdiagnostics-color=always
          LDFLAGS: -fdiagnostics-color=always
          ASAN_OPTIONS: check_initialization_order=1
          UBSAN_OPTIONS: print_stacktrace=1
        run: |
          mkdir -p "build/debug"
          cd "build/debug"
          cmake -G Ninja -D "CMAKE_BUILD_TYPE=Debug" "../.."
          ninja
          ctest --output-on-failure -E "check_.*"

      - name: Test release
        env:
          CXXFLAGS: -fdiagnostics-color=always
          LDFLAGS: -fdiagnostics-color=always
        run: |
          mkdir -p "build/release"
          cd "build/release"
          cmake -G Ninja -D "CMAKE_BUILD_TYPE=Release" "../.."
          ninja
          ctest --output-on-failure -E "check_.*"

      - name: Additional checks
        run: |
          cd "build/debug"
          ctest --output-on-failure -R "check_.*"


  build_windows:
    runs-on: windows-latest
    steps:
      - name: Install system dependencies
        run: |
          choco install nasm

      - name: Checkout
        run: |
          git clone "https://github.com/%GITHUB_REPOSITORY%" "./"
          git checkout "%GITHUB_SHA%"

      - name: Install vcpkg dependencies
        run: |
          mkdir -p "build/vcpkg"
          cd "build/vcpkg"
          call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Entreprise\VC\Auxiliary\Build\vcvars64.bat"
          cmake "../.."

      - name: Test debug
        run: |
          mkdir -p "build/debug"
          cd "build/debug"
          call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Entreprise\VC\Auxiliary\Build\vcvars64.bat"
          cmake -G Ninja -D "CMAKE_BUILD_TYPE=Debug" -D "CMAKE_CXX_FLAGS=" "../.."
          ninja
          ctest --output-on-failure -E "check_.*"

      - name: Test release
        run: |
          mkdir -p "build/release"
          cd "build/release"
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Entreprise\VC\Auxiliary\Build\vcvars64.bat"
          cmake -G Ninja -D "CMAKE_BUILD_TYPE=Release" -D "CMAKE_CXX_FLAGS=" "../.."
          ninja
          ctest --output-on-failure -E "check_.*"
